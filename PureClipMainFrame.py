"""Subclass of MainFrame, which is generated by wxFormBuilder."""

import wx
import PureClip
import wx.lib.mixins.listctrl

# Implementing MainFrame
class PureClipMainFrame( PureClip.MainFrame ):
	def __init__( self, parent ):
		

		PureClip.MainFrame.__init__( self, parent )

		self.listCtrl.InsertColumn(0, "序号", width=40)
		self.listCtrl.InsertColumn(1, "文件名", width=280)
		self.listCtrl.InsertColumn(2, "开始时间", width=65)
		self.listCtrl.InsertColumn(3, "结束时间", width=65)
		self.listCtrl.InsertColumn(4, "文件路径", width=238)

		self.itemMap = {}

		self.LOGOUT = True

	# Handlers for MainFrame events.
	def listCtrlOnListItemSelected( self, event ):
		self.firstSelectedIndex = self.listCtrl.GetFirstSelected()
		self.LOG("Selected Item Index: {}, Selected Item ID: {}".format(self.firstSelectedIndex, self.listCtrl.GetItem(self.firstSelectedIndex, 0).GetText()))
		return

	def ApplyTimeButtonOnClick( self, event ):
		# TODO: Implement ApplyTimeButtonOnClick
		pass

	def AddFileBtnOnClick( self, event ):
		# 文件选择对话框
		FileDlg = wx.FileDialog(self, u"选择导入的文件", "", "", "*.mp4", wx.FD_OPEN)
		if FileDlg.ShowModal() == wx.ID_OK:
			# 文件导入
			# col 0		id
			# col 1		filename
			# col 2		startTime
			# col 3		endTime
			# col 4		path
			# (NO, filename, startTime, endTime, path)

			index = self.listCtrl.InsertItem(self.listCtrl.GetItemCount(),self.listCtrl.GetItemCount())
			data = (str(index), FileDlg.GetFilename(), "开头", "结尾", FileDlg.GetPath())
			self.listCtrl.itemDataMap[index] = data
			self.listCtrl.SetItemData(index, index)

			self.listCtrl.SetItem(index, 0, str(index))
			self.listCtrl.SetItem(index, 1, FileDlg.GetFilename())
			self.listCtrl.SetItem(index, 2, "开头")
			self.listCtrl.SetItem(index, 3, "结尾")
			self.listCtrl.SetItem(index, 4, FileDlg.GetPath())

			self.itemMap[index] = index

			self.LOG("{}, {}".format(FileDlg.GetFilename(), FileDlg.GetPath()))
			
		FileDlg.Destroy()

	def RemoveBtnOnClick( self, event ):
		# TODO: Implement RemoveBtnOnClick
		pass

	def MovUpBtnOnClick( self, event ):
		selectedItemIndex = self.firstSelectedIndex
		selectedItemNO = self.listCtrl.GetItem(selectedItemIndex, 0).GetText()
		if selectedItemNO == '0':
			return
		
		# run error with no causing, using the itemMap instead.
		# preItemIndex = self.listCtrl.FindItem(0, str(int(selectedItemNO)-1), False)

		preItemIndex = -1
		for i in self.itemMap:
			if self.itemMap[i] == int(selectedItemNO) - 1:
				preItemIndex = i
				break

		preItemNO = str(self.itemMap[i])

		# self.LOG("SelectedItemIndex: {}, PreItemIndex: {}".format(selectedItemIndex, preItemIndex))
		# self.LOG("SelectedItemNO: {}, PreItemNO: {}".format(selectedItemNO, preItemNO))
		
		self.listCtrl.SetItem(selectedItemIndex, 0, str(int(selectedItemNO) - 1))
		self.listCtrl.SetItem(preItemIndex, 0, str(int(preItemNO) + 1))

		tempVar = -1
		for i in self.itemMap:
			if self.itemMap[i] == int(selectedItemNO):
				tempVar = i
				break

		self.listCtrl.itemDataMap[tempVar][0] = int(selectedItemNO) - 1
		self.listCtrl.itemDataMap[preItemIndex][0] = int(selectedItemNO)
		
		self.itemMap[selectedItemIndex] = int(selectedItemNO) - 1
		self.itemMap[preItemIndex] = int(preItemNO) + 1

		self.listCtrl.SetItemData(selectedItemIndex, int(selectedItemNO)-1)
		self.listCtrl.SetItemData(preItemIndex, int(preItemNO)+1)

		self.listCtrl.SortListItems(0,1)
		pass

	def MovDownBtnOnClick( self, event ):
		# TODO: Implement MovDownBtnOnClick
		pass

	def ExportBtnOnClick( self, event ):
		# TODO: Implement ExportBtnOnClick
		pass

	def ProjectWebBtnOnClick( self, event ):
		# TODO: Implement ProjectWebBtnOnClick
		pass

	def LOG(self, string):
		if self.LOGOUT:
			print("[LOG] " + string)
		return